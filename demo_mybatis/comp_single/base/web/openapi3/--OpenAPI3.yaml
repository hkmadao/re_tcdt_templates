openapi: '3.0.0'
info:
  version: '1.0'
  title: '{{ rootInfo.displayName }}'
  description: {{ rootInfo.displayName }}
paths:
  /{{ rootInfo.camelCaseName }}/add:
    post:
      summary: create {{ rootInfo.className }}
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/{{ rootInfo.className }}'
      responses:
        '200':
          description: {{ rootInfo.className }} info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleCommonResult'
  /{{ rootInfo.camelCaseName }}/update:
    post:
      summary: update {{ rootInfo.className }}
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/{{ rootInfo.className }}'
      responses:
        '200':
          description: {{ rootInfo.className }} info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleCommonResult'
  /{{ rootInfo.camelCaseName }}/remove:
    post:
      summary: remove {{ rootInfo.className }}
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/{{ rootInfo.className }}'
      responses:
        '200':
          description: {{ rootInfo.className }} info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleCommonResult' 
  /{{ rootInfo.camelCaseName }}/getById/{idMain}:
    parameters:
      - name: idMain
        description: The unique identifier of the {{ rootInfo.className }}
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/idMain'
    get:
      summary: Read a {{ rootInfo.className }}
      responses:
        '200':
          description: {{ rootInfo.className }} info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleCommonResult'
  /{{ rootInfo.camelCaseName }}/getAll:
    post:
      summary: getAll {{ rootInfo.className }}
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/{{ rootInfo.className }}'
      responses:
        '200':
          description: {{ rootInfo.className }} info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCommonResult'
  /{{ rootInfo.camelCaseName }}/aq:
    post:
      summary: aq {{ rootInfo.className }}
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/Condition'
      responses:
        '200':
          description: {{ rootInfo.className }} info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCommonResult'
  /{{ rootInfo.camelCaseName }}/aqPage:
    post:
      summary: aqPage {{ rootInfo.className }}
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/PageInfoInput'
      responses:
        '200':
          description: {{ rootInfo.className }} info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageCommonResult'
components:
  schemas:
    {{ rootInfo.className }}:
      type: object
      properties:
        {{ rootInfo.pkAttributeInfo.camelCaseName }}:
          type: string
          description: {{ rootInfo.pkAttributeInfo.displayName }}
{%- for attributeInfo in rootInfo.baseAttributeInfoList %}
        {{ attributeInfo.attributeName }}:
          type: {{ attributeInfo.ext2 }}
          description: {{ attributeInfo.displayName }}
  {%- if attributeInfo.enumInfo %}
          enum:
    {%- for enumAttributeInfo in attributeInfo.enumInfo.enumAttributeInfoList %}
          - {{ enumAttributeInfo.enumValue }}
    {%- endfor %}
  {%- endif %}
{%- endfor %}
{%- for attributeInfo in rootInfo.fkAttributeInfoList %}
        {{ attributeInfo.attributeName }}:
          type: string
          description: {{ attributeInfo.displayName }}
{%- endfor %}
{%- for attributeInfo in rootInfo.upAttributeInfoList %}
        {{ attributeInfo.attributeName }}:
          $ref: '#/components/schemas/{{ attributeInfo.outEntityInfo.className }}'
{%- endfor %}
{%- for attributeInfo in rootInfo.upSingleAttributeInfoList %}
        {{ attributeInfo.attributeName }}:
          $ref: '#/components/schemas/{{ attributeInfo.outEntityInfo.className }}'
{%- endfor %}
{%- for entityInfo in rootInfo.compInfo.upEntityInfoList %}
    {{ entityInfo.className }}:
      type: object
      description: {{ entityInfo.displayName }}
      properties:
  {%- for attributeInfo in entityInfo.baseAttributeInfoList %}
        {{ attributeInfo.camelCaseName }}:
          type: {{ attributeInfo.ext2 }}
          description: {{ attributeInfo.displayName }}
    {%- if attributeInfo.enumInfo %}
          enum:
      {%- for enumAttributeInfo in attributeInfo.enumInfo.enumAttributeInfoList %}
          - {{ enumAttributeInfo.enumValue }}
      {%- endfor %}
    {%- endif %}
  {%- endfor %}
  {%- for attributeInfo in entityInfo.fkAttributeInfoList %}
        {{ attributeInfo.camelCaseName }}:
          type: string
          description: {{ attributeInfo.displayName }}
  {%- endfor %}
        {{ entityInfo.pkAttributeInfo.camelCaseName }}":{
          type: string
          description: "{{ entityInfo.pkAttributeInfo.displayName }}"
{%- endfor %}
    FilterNode:
      type: object
      description: 过滤节点
      properties:
        name:
          type: string
          description: 属性名称
        operatorCode:
          type: string
          description: 操作符
          enum:
          - equal
          - likeFull
          - likeLeft
          - likeRight
          - isNull
          - in
          - notIn
        filterParams:
          type: array
          items: 
            type: string
    LogicNode:
      type: object
      description: 连接节点
      properties:
        logicOperatorCode:
          type: string
          description: 逻辑操作符
          enum:
          - and
          - or
        filterNodes:
          type: array
          description: 过滤条件
          items: 
            $ref: '#/components/schemas/FilterNode'
        logicNode:
          $ref: '#/components/schemas/LogicNode'
    Order:
      type: object
      description: 排序节点
      properties:
        property:
          type: string
          description: 排序属性
        direction:
          type: string
          description: 排序类型
          enum: 
          - DESC
          - ASC
        ignoreCase:
          type: boolean
    Condition:
      type: object
      description: 查询条件
      properties:
        logicNode:
          description: 条件节点
          $ref: '#/components/schemas/LogicNode'
        orders:
          type: array
          description: 排序节点
          items:
            $ref: '#/components/schemas/Order'
    PageInfoInput:
      type: object
      description: 分页入参
      properties:
        pageIndex:
          type: integer
          format: int32
          description: 开始页
          default: 1
          minimum: 1
        pageSize:
          type: integer
          format: int32
          description: 每页大小
          default: 10
          minimum: 10
        totalCount:
          type: integer
          format: int32
          description: 总记录数
          default: 10
          minimum: 100
        logicNode:
          description: 条件节点
          $ref: '#/components/schemas/LogicNode'
        orders:
          type: array
          description: 排序节点
          items:
            $ref: '#/components/schemas/Order'
    PageInfo:
      type: object
      description: 分页数据
      properties:
        pageInfoInput:
          description: 分页入参
          $ref: '#/components/schemas/PageInfoInput'
        dataList:
          type: array
          description: 结果数据
          items:
            $ref: '#/components/schemas/{{ rootInfo.className }}'
    SingleCommonResult:
      type: object
      description: 单数据返回类型
      properties:
        status:
          type: integer
          description: 状态码
          default: 0
          enum:
          - 0
          - 1
        message:
          type: string
          description: 信息
        data:
          description: 结果数据
          $ref: '#/components/schemas/{{ rootInfo.className }}'
    ListCommonResult:
      type: object
      description: 列表数据返回类型
      properties:
        status:
          type: integer
          description: 状态码
          default: 0
          enum:
          - 0
          - 1
        message:
          type: string
          description: 信息
        data:
          type: array
          description: 结果数据
          items:
            $ref: '#/components/schemas/{{ rootInfo.className }}'
    PageCommonResult:
      type: object
      description: 分页数据返回类型
      properties:
        status:
          type: integer
          description: 状态码
          default: 0
          enum:
          - 0
          - 1
        message:
          type: string
          description: 信息
        data:
          description: 结果数据
          $ref: '#/components/schemas/PageInfo'
    idMain:
      description: The unique identifier of a spacecraft
      type: string
  securitySchemes:
    ApiKey:
      type: apiKey
      in: header
      name: X-Api-Key
security:
  - ApiKey: []